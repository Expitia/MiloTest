// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components tests should render App page component 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <App
    tasks={
      Array [
        Object {
          "description": "First task",
          "index": 0,
          "type": "Done",
        },
        Object {
          "description": "Test task",
          "index": 1,
          "type": "Delete",
        },
        Object {
          "description": "Second Task",
          "index": 2,
          "type": "Done",
        },
        Object {
          "description": "Thirt task",
          "index": 3,
          "type": "Delete",
        },
        Object {
          "description": "Four Task",
          "index": 4,
          "type": "ToDo",
        },
      ]
    }
  >
    <Adapter>
      <BasicLayout
        prefixCls="ant-layout"
        tagName="section"
      >
        <section
          className="ant-layout"
        >
          <Adapter>
            <Basic
              prefixCls="ant-layout-header"
              tagName="header"
            >
              <header
                className="ant-layout-header"
              >
                <img
                  src="favicon.png"
                />
              </header>
            </Basic>
          </Adapter>
          <Adapter>
            <Basic
              prefixCls="ant-layout-content"
              tagName="main"
            >
              <main
                className="ant-layout-content"
              >
                <h1>
                  List information
                </h1>
                <Component>
                  <div
                    className="list-options"
                  >
                    <Input
                      onChange={[Function]}
                      placeholder="Write a description to filter"
                      type="text"
                    >
                      <input
                        className="ant-input"
                        onChange={[Function]}
                        onKeyDown={[Function]}
                        placeholder="Write a description to filter"
                        type="text"
                        value=""
                      />
                    </Input>
                    <Select
                      choiceTransitionName="zoom"
                      defaultValue=""
                      onChange={[Function]}
                      showSearch={false}
                      transitionName="slide-up"
                    >
                      <Select
                        allowClear={false}
                        autoClearSearchValue={true}
                        backfill={false}
                        choiceTransitionName="zoom"
                        className=""
                        clearIcon={
                          <Icon
                            className="ant-select-clear-icon"
                            theme="filled"
                            type="close-circle"
                          />
                        }
                        combobox={false}
                        defaultActiveFirstOption={true}
                        defaultOpen={false}
                        defaultValue=""
                        dropdownMatchSelectWidth={true}
                        dropdownMenuStyle={Object {}}
                        dropdownRender={[Function]}
                        dropdownStyle={Object {}}
                        inputIcon={
                          <Icon
                            className="ant-select-arrow-icon"
                            type="down"
                          />
                        }
                        labelInValue={false}
                        menuItemSelectedIcon={
                          <Icon
                            className="ant-select-selected-icon"
                            type="check"
                          />
                        }
                        multiple={false}
                        notFoundContent={
                          <Context.Consumer>
                            [Function]
                          </Context.Consumer>
                        }
                        onBlur={[Function]}
                        onChange={[Function]}
                        onDeselect={[Function]}
                        onFocus={[Function]}
                        onInputKeyDown={[Function]}
                        onSearch={[Function]}
                        onSelect={[Function]}
                        optionFilterProp="value"
                        optionLabelProp="children"
                        placeholder=""
                        prefixCls="ant-select"
                        removeIcon={
                          <Icon
                            className="ant-select-remove-icon"
                            type="close"
                          />
                        }
                        showAction={
                          Array [
                            "click",
                          ]
                        }
                        showSearch={false}
                        tabIndex={0}
                        tags={false}
                        tokenSeparators={Array []}
                        transitionName="slide-up"
                      >
                        <SelectTrigger
                          ariaId="test-uuid"
                          backfillValue=""
                          combobox={false}
                          defaultActiveFirstOption={true}
                          dropdownMatchSelectWidth={true}
                          dropdownMenuStyle={Object {}}
                          dropdownRender={[Function]}
                          dropdownStyle={Object {}}
                          empty={false}
                          inputValue=""
                          menuItemSelectedIcon={
                            <Icon
                              className="ant-select-selected-icon"
                              type="check"
                            />
                          }
                          multiple={false}
                          onDropdownVisibleChange={[Function]}
                          onMenuDeselect={[Function]}
                          onMenuSelect={[Function]}
                          onPopupFocus={[Function]}
                          options={Array []}
                          prefixCls="ant-select"
                          showAction={
                            Array [
                              "click",
                            ]
                          }
                          showSearch={false}
                          transitionName="slide-up"
                          value={
                            Array [
                              "",
                            ]
                          }
                          visible={false}
                        >
                          <Trigger
                            action={Array []}
                            afterPopupVisibleChange={[Function]}
                            ariaId="test-uuid"
                            backfillValue=""
                            blurDelay={0.15}
                            builtinPlacements={
                              Object {
                                "bottomLeft": Object {
                                  "offset": Array [
                                    0,
                                    4,
                                  ],
                                  "overflow": Object {
                                    "adjustX": 0,
                                    "adjustY": 1,
                                  },
                                  "points": Array [
                                    "tl",
                                    "bl",
                                  ],
                                },
                                "topLeft": Object {
                                  "offset": Array [
                                    0,
                                    -4,
                                  ],
                                  "overflow": Object {
                                    "adjustX": 0,
                                    "adjustY": 1,
                                  },
                                  "points": Array [
                                    "bl",
                                    "tl",
                                  ],
                                },
                              }
                            }
                            combobox={false}
                            defaultActiveFirstOption={true}
                            defaultPopupVisible={false}
                            destroyPopupOnHide={false}
                            dropdownMatchSelectWidth={true}
                            dropdownMenuStyle={Object {}}
                            dropdownRender={[Function]}
                            dropdownStyle={Object {}}
                            focusDelay={0}
                            getDocument={[Function]}
                            getPopupClassNameFromAlign={[Function]}
                            hideAction={
                              Array [
                                "click",
                              ]
                            }
                            inputValue=""
                            mask={false}
                            maskClosable={true}
                            menuItemSelectedIcon={
                              <Icon
                                className="ant-select-selected-icon"
                                type="check"
                              />
                            }
                            mouseEnterDelay={0}
                            mouseLeaveDelay={0.1}
                            multiple={false}
                            onDropdownVisibleChange={[Function]}
                            onMenuDeselect={[Function]}
                            onMenuSelect={[Function]}
                            onPopupAlign={[Function]}
                            onPopupVisibleChange={[Function]}
                            options={Array []}
                            popup={
                              <DropdownMenu
                                ariaId="test-uuid"
                                backfillValue=""
                                defaultActiveFirstOption={true}
                                dropdownMenuStyle={Object {}}
                                inputValue=""
                                menuItemSelectedIcon={
                                  <Icon
                                    className="ant-select-selected-icon"
                                    type="check"
                                  />
                                }
                                menuItems={Array []}
                                multiple={false}
                                onMenuDeselect={[Function]}
                                onMenuSelect={[Function]}
                                onPopupFocus={[Function]}
                                prefixCls="ant-select-dropdown"
                                value={
                                  Array [
                                    "",
                                  ]
                                }
                                visible={false}
                              />
                            }
                            popupAlign={Object {}}
                            popupClassName="ant-select-dropdown--single"
                            popupPlacement="bottomLeft"
                            popupStyle={Object {}}
                            popupTransitionName="slide-up"
                            popupVisible={false}
                            prefixCls="ant-select-dropdown"
                            showAction={
                              Array [
                                "click",
                              ]
                            }
                            showSearch={false}
                            transitionName="slide-up"
                            value={
                              Array [
                                "",
                              ]
                            }
                            visible={false}
                          >
                            <div
                              className="ant-select ant-select-enabled"
                              key="trigger"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseDown={[Function]}
                              onMouseOut={[Function]}
                              onMouseUp={[Function]}
                              onTouchStart={[Function]}
                            >
                              <div
                                aria-autocomplete="list"
                                aria-controls="test-uuid"
                                aria-expanded={false}
                                aria-haspopup="true"
                                className="ant-select-selection
            ant-select-selection--single"
                                key="selection"
                                onKeyDown={[Function]}
                                role="combobox"
                                tabIndex={0}
                              >
                                <div
                                  className="ant-select-selection__rendered"
                                >
                                  <div
                                    className="ant-select-selection-selected-value"
                                    key="value"
                                    style={
                                      Object {
                                        "display": "block",
                                        "opacity": 1,
                                      }
                                    }
                                    title="Select a type to filter"
                                  >
                                    Select a type to filter
                                  </div>
                                </div>
                                <span
                                  className="ant-select-arrow"
                                  key="arrow"
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "WebkitUserSelect": "none",
                                      "userSelect": "none",
                                    }
                                  }
                                  unselectable="on"
                                >
                                  <Icon
                                    className="ant-select-arrow-icon"
                                    type="down"
                                  >
                                    <LocaleReceiver
                                      componentName="Icon"
                                    >
                                      <i
                                        aria-label="icon: down"
                                        className="anticon anticon-down ant-select-arrow-icon"
                                      >
                                        <IconReact
                                          className=""
                                          type="down-o"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className=""
                                            data-icon="down"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-down"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                              key="svg-down-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </i>
                                    </LocaleReceiver>
                                  </Icon>
                                </span>
                              </div>
                            </div>
                          </Trigger>
                        </SelectTrigger>
                      </Select>
                    </Select>
                    <CreaterRow
                      onAccept={[Function]}
                    >
                      <Button
                        block={false}
                        ghost={false}
                        htmlType="button"
                        loading={false}
                        onClick={[Function]}
                        title="Add new task"
                      >
                        <Wave>
                          <button
                            className="ant-btn"
                            onClick={[Function]}
                            title="Add new task"
                            type="button"
                          >
                            <Icon
                              key=".0"
                              type="plus"
                            >
                              <LocaleReceiver
                                componentName="Icon"
                              >
                                <i
                                  aria-label="icon: plus"
                                  className="anticon anticon-plus"
                                >
                                  <IconReact
                                    className=""
                                    type="plus-o"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className=""
                                      data-icon="plus"
                                      fill="currentColor"
                                      focusable="false"
                                      height="1em"
                                      key="svg-plus"
                                      viewBox="64 64 896 896"
                                      width="1em"
                                    >
                                      <path
                                        d="M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z"
                                        key="svg-plus-svg-0"
                                      />
                                      <path
                                        d="M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z"
                                        key="svg-plus-svg-1"
                                      />
                                    </svg>
                                  </IconReact>
                                </i>
                              </LocaleReceiver>
                            </Icon>
                            <span
                              key=".1"
                            >
                               
                            </span>
                            <span
                              key=".2"
                            >
                              Add a new task
                            </span>
                          </button>
                        </Wave>
                      </Button>
                      <Modal
                        confirmLoading={false}
                        maskTransitionName="fade"
                        okType="primary"
                        onCancel={[Function]}
                        onOk={[Function]}
                        transitionName="zoom"
                        visible={false}
                        width={520}
                      >
                        <Component
                          closeIcon={
                            <span
                              className="ant-modal-close-x"
                            >
                              <Icon
                                className="ant-modal-close-icon"
                                type="close"
                              />
                            </span>
                          }
                          confirmLoading={false}
                          footer={
                            <LocaleReceiver
                              componentName="Modal"
                              defaultLocale={
                                Object {
                                  "cancelText": "Cancel",
                                  "justOkText": "OK",
                                  "okText": "OK",
                                }
                              }
                            >
                              [Function]
                            </LocaleReceiver>
                          }
                          maskTransitionName="fade"
                          okType="primary"
                          onCancel={[Function]}
                          onClose={[Function]}
                          onOk={[Function]}
                          prefixCls="ant-modal"
                          transitionName="zoom"
                          visible={false}
                          width={520}
                          wrapClassName=""
                        >
                          <PortalWrapper
                            visible={false}
                          />
                        </Component>
                      </Modal>
                    </CreaterRow>
                  </div>
                </Component>
                <List
                  bordered={false}
                  dataSource={
                    Array [
                      Object {
                        "description": "First task",
                        "index": 0,
                        "type": "Done",
                      },
                      Object {
                        "description": "Test task",
                        "index": 1,
                        "type": "Delete",
                      },
                      Object {
                        "description": "Second Task",
                        "index": 2,
                        "type": "Done",
                      },
                      Object {
                        "description": "Thirt task",
                        "index": 3,
                        "type": "Delete",
                      },
                      Object {
                        "description": "Four Task",
                        "index": 4,
                        "type": "ToDo",
                      },
                    ]
                  }
                  loading={false}
                  locale={
                    Object {
                      "emptyText": "There are task created",
                    }
                  }
                  pagination={false}
                  renderItem={[Function]}
                  split={true}
                >
                  <div
                    className="ant-list ant-list-split"
                  >
                    <Spin
                      size="default"
                      spinning={false}
                      wrapperClassName=""
                    >
                      <div
                        className="ant-spin-nested-loading"
                      >
                        <div
                          className="ant-spin-container"
                          key="container"
                        >
                          <ul
                            className="ant-list-items"
                          >
                            <Component
                              key="list-item-0"
                              task={
                                Object {
                                  "description": "First task",
                                  "index": 0,
                                  "type": "Done",
                                }
                              }
                            >
                              <div
                                className="option-success"
                              >
                                <span>
                                  First task
                                </span>
                                <Tag
                                  closable={false}
                                  color="green"
                                >
                                  <span
                                    className="ant-tag ant-tag-green"
                                    style={
                                      Object {
                                        "backgroundColor": undefined,
                                      }
                                    }
                                  >
                                    Done
                                  </span>
                                </Tag>
                              </div>
                            </Component>
                            <Component
                              key="list-item-1"
                              task={
                                Object {
                                  "description": "Test task",
                                  "index": 1,
                                  "type": "Delete",
                                }
                              }
                            >
                              <div
                                className="option-delete"
                              >
                                <span>
                                  Test task
                                </span>
                                <Tag
                                  closable={false}
                                  color="red"
                                >
                                  <span
                                    className="ant-tag ant-tag-red"
                                    style={
                                      Object {
                                        "backgroundColor": undefined,
                                      }
                                    }
                                  >
                                    Deleted
                                  </span>
                                </Tag>
                              </div>
                            </Component>
                            <Component
                              key="list-item-2"
                              task={
                                Object {
                                  "description": "Second Task",
                                  "index": 2,
                                  "type": "Done",
                                }
                              }
                            >
                              <div
                                className="option-success"
                              >
                                <span>
                                  Second Task
                                </span>
                                <Tag
                                  closable={false}
                                  color="green"
                                >
                                  <span
                                    className="ant-tag ant-tag-green"
                                    style={
                                      Object {
                                        "backgroundColor": undefined,
                                      }
                                    }
                                  >
                                    Done
                                  </span>
                                </Tag>
                              </div>
                            </Component>
                            <Component
                              key="list-item-3"
                              task={
                                Object {
                                  "description": "Thirt task",
                                  "index": 3,
                                  "type": "Delete",
                                }
                              }
                            >
                              <div
                                className="option-delete"
                              >
                                <span>
                                  Thirt task
                                </span>
                                <Tag
                                  closable={false}
                                  color="red"
                                >
                                  <span
                                    className="ant-tag ant-tag-red"
                                    style={
                                      Object {
                                        "backgroundColor": undefined,
                                      }
                                    }
                                  >
                                    Deleted
                                  </span>
                                </Tag>
                              </div>
                            </Component>
                            <Component
                              key="list-item-4"
                              task={
                                Object {
                                  "description": "Four Task",
                                  "index": 4,
                                  "type": "ToDo",
                                }
                              }
                            >
                              <div
                                className="option-todo"
                              >
                                <span>
                                  Four Task
                                </span>
                                <div>
                                  <Button
                                    block={false}
                                    className="button-success"
                                    ghost={false}
                                    htmlType="button"
                                    loading={false}
                                    onClick={[Function]}
                                    title="Done task"
                                  >
                                    <Wave>
                                      <button
                                        className="ant-btn button-success"
                                        onClick={[Function]}
                                        title="Done task"
                                        type="button"
                                      >
                                        <Icon
                                          key=".0"
                                          type="check"
                                        >
                                          <LocaleReceiver
                                            componentName="Icon"
                                          >
                                            <i
                                              aria-label="icon: check"
                                              className="anticon anticon-check"
                                            >
                                              <IconReact
                                                className=""
                                                type="check-o"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className=""
                                                  data-icon="check"
                                                  fill="currentColor"
                                                  focusable="false"
                                                  height="1em"
                                                  key="svg-check"
                                                  viewBox="64 64 896 896"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 0 0-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z"
                                                    key="svg-check-svg-0"
                                                  />
                                                </svg>
                                              </IconReact>
                                            </i>
                                          </LocaleReceiver>
                                        </Icon>
                                      </button>
                                    </Wave>
                                  </Button>
                                  <Button
                                    block={false}
                                    className="button-delete"
                                    ghost={false}
                                    htmlType="button"
                                    loading={false}
                                    onClick={[Function]}
                                    title="Delete task"
                                  >
                                    <Wave>
                                      <button
                                        className="ant-btn button-delete"
                                        onClick={[Function]}
                                        title="Delete task"
                                        type="button"
                                      >
                                        <Icon
                                          key=".0"
                                          type="delete"
                                        >
                                          <LocaleReceiver
                                            componentName="Icon"
                                          >
                                            <i
                                              aria-label="icon: delete"
                                              className="anticon anticon-delete"
                                            >
                                              <IconReact
                                                className=""
                                                type="delete-o"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className=""
                                                  data-icon="delete"
                                                  fill="currentColor"
                                                  focusable="false"
                                                  height="1em"
                                                  key="svg-delete"
                                                  viewBox="64 64 896 896"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                    key="svg-delete-svg-0"
                                                  />
                                                </svg>
                                              </IconReact>
                                            </i>
                                          </LocaleReceiver>
                                        </Icon>
                                      </button>
                                    </Wave>
                                  </Button>
                                </div>
                              </div>
                            </Component>
                          </ul>
                        </div>
                      </div>
                    </Spin>
                  </div>
                </List>
              </main>
            </Basic>
          </Adapter>
          <Adapter>
            <Basic
              prefixCls="ant-layout-footer"
              tagName="footer"
            >
              <footer
                className="ant-layout-footer"
              >
                Powered by Ant Design 
                <br />
                 Created for Rafael Espitia
              </footer>
            </Basic>
          </Adapter>
        </section>
      </BasicLayout>
    </Adapter>
  </App>
</Router>
`;

exports[`Components tests should render ListOptions component 1`] = `
<div
  className="list-options"
>
  <Input
    onChange={[Function]}
    placeholder="Write a description to filter"
    type="text"
  />
  <Select
    choiceTransitionName="zoom"
    defaultValue="done"
    onChange={[Function]}
    showSearch={false}
    transitionName="slide-up"
  >
    <Option
      value=""
    >
      Select a type to filter
    </Option>
    <Option
      value="todo"
    >
      To do task
    </Option>
    <Option
      value="done"
    >
      Success task
    </Option>
    <Option
      value="delete"
    >
      Deleted task
    </Option>
  </Select>
  <CreaterRow
    onAccept={[Function]}
  />
</div>
`;

exports[`Components tests should render RowTask component 1`] = `
<div
  className="option-success"
>
  <span>
    First task
  </span>
  <Tag
    closable={false}
    color="green"
  >
    Done
  </Tag>
</div>
`;
